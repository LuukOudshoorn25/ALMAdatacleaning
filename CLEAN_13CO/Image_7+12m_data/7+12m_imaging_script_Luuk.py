# step2: Imaging

######################################################
# Visibility data was generated by running the python script in the 12m visdata folder first. 
# Visibilities

vis7_12m_F1 = ["../7m_visdata/uid___A002_Xe1baa0_X8097.ms.split20.contsub",
	"../7m_visdata/uid___A002_Xe220f2_X4ea1.ms.split20.contsub",
	"../7m_visdata/uid___A002_Xe230a1_X28f6.ms.split20.contsub",
	"../7m_visdata/uid___A002_Xe230a1_X32eb.ms.split20.contsub",
	"../7m_visdata/uid___A002_Xe220f2_X5842.ms.split20.contsub",
	"../7m_visdata/uid___A002_Xe247d0_Xeb.ms.split20.contsub",
	"../7m_visdata/uid___A002_Xe220f2_X62c1.ms.split20.contsub",
	"../7m_visdata/uid___A002_Xe27761_X172c.ms.split20.contsub",
    "../12m_visdata/uid___A002_Xe3da01_X18fa.ms.split29.contsub"]

# Field 2: X2188
vis7_12m_F2 = ["../7m_visdata/uid___A002_Xe31981_Xf7ea.ms.split.cal.split20.contsub",
	"../7m_visdata/uid___A002_Xe32bed_Xdce2.ms.split.cal.split20.contsub",
	"../7m_visdata/uid___A002_Xe32bed_Xe889.ms.split.cal.split20.contsub",
	"../7m_visdata/uid___A002_Xe37224_X3836.ms.split.cal.split20.contsub",
	"../7m_visdata/uid___A002_Xe37224_X461a.ms.split.cal.split20.contsub",
	"../7m_visdata/uid___A002_Xe37224_Xdfe9.ms.split.cal.split20.contsub",
	"../7m_visdata/uid___A002_Xe37224_Xe70a.ms.split.cal.split20.contsub",
	"../12m_visdata/uid___A002_Xe48598_Xafeb.ms.split29.contsub"]
# Field 3: X21a0
vis7_12m_F3 = ["../7m_visdata/uid___A002_Xe1a561_X2fad.ms.split20.contsub",
	"../7m_visdata/uid___A002_Xe1baa0_X477e.ms.split20.contsub",
	"../7m_visdata/uid___A002_Xe1baa0_X7737.ms.split20.contsub",
	"../7m_visdata/uid___A002_Xe1baa0_X7d43.ms.split20.contsub",
    "../12m_visdata/uid___A002_Xe3f5bb_X21c9.ms.split25.contsub",
    "../12m_visdata/uid___A002_Xe407cf_X1887b.ms.split29.contsub"]
# Field 4: X2198
vis7_12m_F4 = ["../7m_visdata/uid___A002_Xe2ada9_X18144.ms.split20.contsub",
	"../7m_visdata/uid___A002_Xe2ada9_X18ea1.ms.split20.contsub",
	"../7m_visdata/uid___A002_Xe31981_X3cee.ms.split20.contsub",
	"../7m_visdata/uid___A002_Xe31981_Xebf5.ms.split20.contsub",
	"../7m_visdata/uid___A002_Xe2ada9_X187a8.ms.split20.contsub",
	"../7m_visdata/uid___A002_Xe31981_X30e4.ms.split20.contsub",
	"../7m_visdata/uid___A002_Xe31981_X47c7.ms.split20.contsub",
	"../7m_visdata/uid___A002_Xe32bed_X3f50.ms.split20.contsub",
    "../12m_visdata/uid___A002_Xe407cf_X15ea.ms.split29.contsub"]
# Field 5: X2190
vis7_12m_F5 = ["../7m_visdata/uid___A002_Xe3da01_X305b.ms.split20.contsub",
	"../7m_visdata/uid___A002_Xe407cf_X9d8c.ms.split20.contsub",
	"../7m_visdata/uid___A002_Xe3da01_X16c5.ms.split20.contsub",
	"../7m_visdata/uid___A002_Xe407cf_X17cba.ms.split20.contsub",
	"../7m_visdata/uid___A002_Xe407cf_Xbb9d.ms.split20.contsub",
	"../7m_visdata/uid___A002_Xe3da01_X2352.ms.split20.contsub",
	"../7m_visdata/uid___A002_Xe407cf_X20de.ms.split20.contsub",
	"../7m_visdata/uid___A002_Xe407cf_Xf987.ms.split20.contsub",
    "../12m_visdata/uid___A002_Xe45e29_X9839.ms.split29.contsub"]



######################################################
# Parameters:
# 13CO(2-1)
linefreq = '220.39870060GHz'
Vstart = '282.715km/s'
chanwidth = '-250m/s'
Nchans = 300
NumIter = 8000
cleanthres = '0.18mJy'
cellsize = '0.25arcsec'
# Clean field 1,3,4
mapsize = [1000,1000,1000,1000,1000]
phasecenters = ['J2000 05h38m32.0 -69d02m18.0','J2000 05h38m34.0 -69d04m38.0','J2000 05h39m0.0 -69d02m45.0','J2000 05h39m0.0 -69d04m42.0','J2000 05h38m36.0 -69d07m00.0']

###########################################################

def process(out_file,zerospacing):
    # To compare results, we smooth to the resolution of the TP beam. First we retrieve the beam details
    TP_bmaj = str(imhead(zerospacing,hdkey='bmaj',mode='get')['value'])+'arcsec'
    TP_bmin = str(imhead(zerospacing,hdkey='bmin',mode='get')['value'])+'arcsec'
    TP_bpa   = str(imhead(zerospacing,hdkey='bpa',mode='get')['value'])+'deg'
    print('=============================================================')
    print(' PB correction....')
    # PB correction
    os.system("rm -rf "+out_file+".pbcor.image")
    impbcor(imagename=out_file+".image",pbimage=out_file+".flux.pbcoverage", outfile=out_file+".pbcor.image")

    ###########################################################
    # We feather with the lower resolution (TP data). Important step. 
    print('=============================================================')
    print(' Running Feathering....')
    # Feather
    os.system("rm -rf "+out_file+".pbcor.feather.image")
    feather(imagename=out_file+".pbcor.feather.image",
	    highres=out_file+".pbcor.image",
	    lowres=zerospacing)
    os.system("rm -rf "+out_file+".feather.image")
    feather(imagename=out_file+".feather.image",
	    highres=out_file+".image",
	    lowres=zerospacing)

    ###########################################################
    # Convolve to same resolution as the TP images for comparisons
    # 
    print('=============================================================')
    #print(' Running convolutions....')
    #os.system("rm -rf "+out_file+".pbcor.image.TPres")
    #imsmooth(imagename=out_file+".pbcor.image",outfile=out_file+".pbcor.image.TPres",
	#    major=TP_bmaj,minor=TP_bmin,pa=TP_bpa,targetres=True)
    #os.system("rm -rf "+out_file+".image.TPres")
    #imsmooth(imagename=out_file+".image",outfile=out_file+".image.TPres",
	#    major=TP_bmaj,minor=TP_bmin,pa=TP_bpa,targetres=True)
    #os.system("rm -rf "+out_file+".feather.image.TPres")
    #imsmooth(imagename=out_file+".feather.image",outfile=out_file+".feather.image.TPres",
	#    major=TP_bmaj,minor=TP_bmin,pa=TP_bpa,targetres=True)
    #os.system("rm -rf "+out_file+".pbcor.feather.image.TPres")
    #imsmooth(imagename=out_file+".pbcor.feather.image",outfile=out_file+".pbcor.feather.image.TPres",
	#    major=TP_bmaj,minor=TP_bmin,pa=TP_bpa,targetres=True)
    # Regrid everything to the model image such that we can make the mosaic using median stacking
    #imregrid(out_file+".image",'12m.modelimage',out_file+".FullMapRegrid.image",overwrite=True)
    #imregrid(out_file+".pbcor.image",'12m.modelimage',out_file+".pbcor.FullMapRegrid.image",overwrite=True)
    #imregrid(out_file+".pbcor.feather.image",'12m.modelimage',out_file+".pbcor.feather.FullMapRegrid.image",overwrite=True)
    #imregrid(out_file+".feather.image",'12m.modelimage',out_file+".feather.FullMapRegrid.image",overwrite=True)

    #exportfits(out_file+".FullMapRegrid.image",out_file+".FullMapRegrid.fits",overwrite=True)
    #exportfits(out_file+".pbcor.FullMapRegrid.image",out_file+".pbcor.FullMapRegrid.fits",overwrite=True)
    #exportfits(out_file+".pbcor.feather.FullMapRegrid.image",out_file+".pbcor.feather.FullMapRegrid.fits",overwrite=True)
    #exportfits(out_file+".feather.FullMapRegrid.image",out_file+".feather.FullMapRegrid.fits",overwrite=True)


###########################################################
visdata = [vis7_12m_F1,vis7_12m_F2,vis7_12m_F3,vis7_12m_F4,vis7_12m_F5]
imagenames = ['30DOR_F'+str(w)+"_12m+7m+TP_CLEAN+nomodel" for w in range(1,6)]
targetdirs = ['./field'+str(w)+'/' for w in range(1,6)]
# Cleaning without model image. This only has to be done for F1,F3,F4
for i in [0,1,2,3,4]:
    target_dir = targetdirs[i]
    out_file = target_dir + imagenames[i]
    zerospacing = 'TP_13CO_regrid.image'
    clean(vis=visdata[i],
        imagename = out_file,
        field = '30_Doradus',
        spw = '*',
        mode = 'velocity',
        nchan = Nchans,
        interpolation='linear',
        start = Vstart,
        width = chanwidth,
        restfreq = linefreq,
        outframe = 'LSRK',
        niter = NumIter,
        threshold = cleanthres,
        psfmode = 'hogbom',
        imagermode = 'mosaic',
        interactive = False,
        imsize = mapsize[i],
        cell = cellsize,
        weighting = 'briggs',
        robust = 0.5,
        #modelimage=zerospacing,
        restoringbeam=["1.75arcsec","1.75arcsec","0deg"],
        phasecenter = phasecenters[i],
        pbcor = False)
    process(out_file,zerospacing)


# Image everything using the lower resolution as model image (hybrid imaging)
# This is now done for all fields, and not seperately for F2+5 now
imagenames = ['30DOR_F'+str(w)+"_12m+7m+TP_CLEAN+model" for w in range(1,6)]
targetdirs = ['./field'+str(w)+'/' for w in range(1,6)]

for i in [0,1,2,3,4]:
    target_dir = targetdirs[i]
    out_file = target_dir + imagenames[i]
    zerospacing = 'TP_13CO_regrid.image'
    clean(vis=visdata[i],
        imagename = out_file,
        field = '30_Doradus',
        spw = '*',
        mode = 'velocity',
        nchan = Nchans,
        interpolation='linear',
        start = Vstart,
        width = chanwidth,
        restfreq = linefreq,
        outframe = 'LSRK',
        niter = NumIter,
        threshold = cleanthres,
        psfmode = 'hogbom',
        imagermode = 'mosaic',
        interactive = False,
        imsize = mapsize[i],
        cell = cellsize,
        weighting = 'briggs',
        robust = 0.5,
        modelimage=zerospacing,
        restoringbeam=["1.75arcsec","1.75arcsec","0deg"],
        phasecenter = phasecenters[i],
        pbcor = False)
    process(out_file,zerospacing)









